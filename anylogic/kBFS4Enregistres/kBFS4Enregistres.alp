<?xml version="1.0" encoding="UTF-8"?>
<!--
*************************************************
	         AnyLogic Project File 
*************************************************	         
-->
<AnyLogicWorkspace WorkspaceVersion="1.9" AnyLogicVersion="8.8.3.202304281219" AlpVersion="8.7.7">
<Model>
	<Id>1676971205447</Id>
	<Name><![CDATA[kBFS4Enregistres]]></Name>
	<EngineVersion>6</EngineVersion>
	<JavaPackageName><![CDATA[kBFS]]></JavaPackageName>
	<ModelTimeUnit><![CDATA[Second]]></ModelTimeUnit>
	<ActiveObjectClasses>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1676971205453</Id>
			<Name><![CDATA[Main]]></Name>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1676971205451</Id>
				<Name><![CDATA[1676971205451]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>DISTANCE_BASED</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[this.connectRange]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1679472000000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1676971205449</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1676971205452</CurrentLevel>
			<ConnectionsId>1676971205448</ConnectionsId>
			<Variables>
				<Variable Class="Parameter">
					<Id>1676971507754</Id>
					<Name><![CDATA[popSize]]></Name>
					<X>50</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[100]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1676971507752</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1679504261986</Id>
					<Name><![CDATA[k]]></Name>
					<X>50</X><Y>220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1679504261984</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1679596117208</Id>
					<Name><![CDATA[connectRange]]></Name>
					<X>40</X><Y>270</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1679596117206</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
			</Variables>
			<AgentLinks>
				<AgentLink>
					<Id>1676971205448</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<EmbeddedObjects>
				<EmbeddedObject>
					<Id>1676971470625</Id>
					<Name><![CDATA[noeuds]]></Name>
					<X>50</X><Y>60</Y>
					<Label><X>-25</X><Y>-30</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<PresentationId>1676971473449</PresentationId>
					<ActiveObjectClass>
						<PackageName><![CDATA[kBFS]]></PackageName>
						<ClassName><![CDATA[Robot]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[kBFS]]></PackageName>
							<ClassName><![CDATA[Robot]]></ClassName>
							<ItemName><![CDATA[1676971282642]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[id]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[x]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[y]]></Name>
						</Parameter>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[this.popSize
]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InEnvironment>true</InEnvironment>	
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[Location X
]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[Location Y
]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>LOAD_FROM_DATABASE</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
							<PackageName><![CDATA[kBFS]]></PackageName>
							<ClassName><![CDATA[a1d]]></ClassName>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
					<ParameterToDatabaseColumnMapping>
						<Item>
							<Key>
								<PackageName><![CDATA[kBFS]]></PackageName>
								<ClassName><![CDATA[Robot]]></ClassName>
								<ItemName><![CDATA[id]]></ItemName>
							</Key>
							<Value>
								<PackageName><![CDATA[kBFS]]></PackageName>
								<ClassName><![CDATA[a1d]]></ClassName>
								<ItemName><![CDATA[id]]></ItemName>
							</Value>
						</Item>
						<Item>
							<Key>
								FAKE_PARAMETER_LOCATION_X_xjal
							</Key>
							<Value>
								<PackageName><![CDATA[kBFS]]></PackageName>
								<ClassName><![CDATA[a1d]]></ClassName>
								<ItemName><![CDATA[x]]></ItemName>
							</Value>
						</Item>
						<Item>
							<Key>
								FAKE_PARAMETER_LOCATION_Y_xjal
							</Key>
							<Value>
								<PackageName><![CDATA[kBFS]]></PackageName>
								<ClassName><![CDATA[a1d]]></ClassName>
								<ItemName><![CDATA[y]]></ItemName>
							</Value>
						</Item>	
					</ParameterToDatabaseColumnMapping>
				</EmbeddedObject>
			</EmbeddedObjects>

			<Presentation>
				<Level>
					<Id>1676971205452</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
				<EmbeddedObjectPresentation>
					<Id>1676971473449</Id>
					<Name><![CDATA[noeuds_presentation]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<DrawingMode>AGENT_CURRENT_POSITION</DrawingMode>
					<ScaleType>AUTOMATICALLY_CALCULATED</ScaleType>
					<GISScaleForRealEmbeddedObjectPresentationSize>1000</GISScaleForRealEmbeddedObjectPresentationSize>
					<GISScaleForFixedEmbeddedObjectPresentationSize>1000000000</GISScaleForFixedEmbeddedObjectPresentationSize>
					<Latitude>0.0</Latitude>
					<Longitude>0.0</Longitude>
				</EmbeddedObjectPresentation>
			</Presentation>

				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1676971282644</Id>
			<Name><![CDATA[Robot]]></Name>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1676971282642</Id>
				<Name><![CDATA[1676971282642]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1679472000000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1676971282640</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1676971282643</CurrentLevel>
			<ConnectionsId>1676971282639</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1676971793928</Id>
					<Name><![CDATA[actif]]></Name>
					<X>30</X><Y>80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1676973236550</Id>
					<Name><![CDATA[idParent]]></Name>
					<X>30</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1677057864110</Id>
					<Name><![CDATA[phase]]></Name>
					<X>30</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1677058291593</Id>
					<Name><![CDATA[distances]]></Name>
					<X>30</X><Y>220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[VecDistances]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1677059654337</Id>
					<Name><![CDATA[colour]]></Name>
					<X>20</X><Y>370</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1677059921160</Id>
					<Name><![CDATA[attente]]></Name>
					<X>20</X><Y>340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1677060179206</Id>
					<Name><![CDATA[enfants]]></Name>
					<X>30</X><Y>170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[List<Robot>
]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1677066698526</Id>
					<Name><![CDATA[donneesEnfants]]></Name>
					<X>30</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ListeValeurs]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1679313508809</Id>
					<Name><![CDATA[valMax]]></Name>
					<X>20</X><Y>310</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1679313771343</Id>
					<Name><![CDATA[distRacine]]></Name>
					<X>20</X><Y>400</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1679488838680</Id>
					<Name><![CDATA[externe]]></Name>
					<X>30</X><Y>110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1679505278357</Id>
					<Name><![CDATA[iteration]]></Name>
					<X>30</X><Y>260</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1679592543696</Id>
					<Name><![CDATA[winnerId]]></Name>
					<X>20</X><Y>430</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1683956300954</Id>
					<Name><![CDATA[minId]]></Name>
					<X>100</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1684424915798</Id>
					<Name><![CDATA[next]]></Name>
					<X>30</X><Y>130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1679313444186</Id>
					<Name><![CDATA[id]]></Name>
					<X>30</X><Y>20</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1679313444184</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1679313449723</Id>
					<Name><![CDATA[x]]></Name>
					<X>80</X><Y>20</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1679313449721</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1679313458116</Id>
					<Name><![CDATA[y]]></Name>
					<X>120</X><Y>20</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1679313458114</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
			</Variables>
			<StatechartElements>
				<StatechartElement Class="State" ParentState="ROOT_NODE">
					<Id>1677053863746</Id>
					<Name><![CDATA[lancement]]></Name>
					<X>250</X><Y>60</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties Width="100" Height="30">
						<EntryAction><![CDATA[this.Init();]]></EntryAction>
						<FillColor/>
					</Properties>
				</StatechartElement>
				<StatechartElement Class="State" ParentState="ROOT_NODE">
					<Id>1677054266937</Id>
					<Name><![CDATA[Ready]]></Name>
					<X>250</X><Y>120</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties Width="220" Height="30">
						<EntryAction><![CDATA[this.fixeCouleur();
]]></EntryAction>
						<FillColor/>
					</Properties>
				</StatechartElement>
				<StatechartElement Class="State" ParentState="ROOT_NODE">
					<Id>1677056412924</Id>
					<Name><![CDATA[Visited]]></Name>
					<X>250</X><Y>220</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties Width="100" Height="30">
						<EntryAction><![CDATA[this.colour = yellow;]]></EntryAction>
						<FillColor/>
					</Properties>
				</StatechartElement>
				<StatechartElement Class="EntryPoint" ParentState="ROOT_NODE">
					<Id>1677053886577</Id>
					<Name><![CDATA[statechart]]></Name>
					<X>320</X><Y>20</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>40</Y></Point>
					</Points>
					<Properties Target="1677053863746">
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1677054274946</Id>
					<Name><![CDATA[transition]]></Name>
					<X>310</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>30</Y></Point>
					</Points>
					<IconOffset>10.0</IconOffset>
					<Properties Source="1677053863746" Target="1677054266937" Trigger="timeout">
						<Action><![CDATA[if (this.id==this.minId){
	//send(new Relance(this.id), this);
	this.demarrage(0);
}

//this.fixeCouleur();]]></Action>
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_SECOND]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1677057080794</Id>
					<Name><![CDATA[transition1]]></Name>
					<X>280</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>70</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1677054266937" Target="1677056412924" Trigger="message">
						<Action><![CDATA[this.receptionSuivi(msg);
]]></Action>
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_SECOND]]></Unit>
						</Rate>
						<MessageType><![CDATA[MessageSuivi]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1677057764931</Id>
					<Name><![CDATA[transition2]]></Name>
					<X>330</X><Y>220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>-70</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1677056412924" Target="1677054266937" Trigger="timeout">
						<Action><![CDATA[this.forwardSuivi();
]]></Action>
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_SECOND]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="Ready" ParentStateId="1677054266937">
					<Id>1677062435382</Id>
					<Name><![CDATA[transition3]]></Name>
					<X>320</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>10</X><Y>-30</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1677054266937" Target="1677054266937" Trigger="message">
						<Action><![CDATA[this.remonteeDonnees(msg);
]]></Action>
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_SECOND]]></Unit>
						</Rate>
						<MessageType><![CDATA[ListeValeurs]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="Ready" ParentStateId="1677054266937">
					<Id>1677070088429</Id>
					<Name><![CDATA[transition4]]></Name>
					<X>350</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>10</X><Y>-30</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1677054266937" Target="1677054266937" Trigger="message">
						<Action><![CDATA[this.receptionRelance(msg);
]]></Action>
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_SECOND]]></Unit>
						</Rate>
						<MessageType><![CDATA[Relance]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="lancement" ParentStateId="1677053863746">
					<Id>1683956677722</Id>
					<Name><![CDATA[transition5]]></Name>
					<X>330</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>10</X><Y>-30</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1677053863746" Target="1677053863746" Trigger="message">
						<Action><![CDATA[this.receptionRechMin(msg);]]></Action>
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_SECOND]]></Unit>
						</Rate>
						<MessageType><![CDATA[RechercheMin]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
			</StatechartElements>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1676973251954</Id>
					<Name><![CDATA[Init]]></Name>
					<X>210</X><Y>-290</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//this.id = this.getIndex();
this.x = this.getX();
this.y = this.getY();
this.minId=this.id;

this.actif = true;
this.colour = black;
this.phase = -1;

this.externe = false;
this.next = -1;

this.iteration = 0;
this.winnerId = -1;
this.distRacine = -1;
this.distances = new VecDistances();
this.effaceArbre();

RechercheMin msg = new RechercheMin(this.id, this.id);
List<Robot> voisins = filter(main.noeuds, n -> (n.isConnectedTo(this)));
for (Robot r:voisins){
	send(msg, r);
}
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1677061765400</Id>
					<Name><![CDATA[demarrage]]></Name>
					<X>320</X><Y>-80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[phase]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Body><![CDATA[//traceln("demarrage de la phase "+phase+" depuis "+this.id);

this.phase = phase;

//démarrage d'un nouvel arbre
ElectMessage msg = new ElectMessage(this.phase, this.id);
this.construitArbre(msg);


]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1677069997266</Id>
					<Name><![CDATA[diffuseEnfants]]></Name>
					<X>450</X><Y>-80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[msg]]></Name>
						<Type><![CDATA[Message]]></Type>
					</Parameter>
					<Body><![CDATA[Robot r;
Iterator iterator = this.enfants.iterator();

while (iterator.hasNext()) {
  	r = (Robot) iterator.next();
	send(msg, r);
	if (msg instanceof MessageSuivi) {
		this.attente++;
	}	
	
}






]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1677073333257</Id>
					<Name><![CDATA[fixeCouleur]]></Name>
					<X>450</X><Y>-50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[this.colour = black;

if (this.actif)
	this.colour = blue;
if (this.externe)
	this.colour = red;
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1679312825983</Id>
					<Name><![CDATA[effaceArbre]]></Name>
					<X>300</X><Y>-290</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[this.enfants = new ArrayList<Robot>();
this.donneesEnfants = new ListeValeurs();
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1679312840417</Id>
					<Name><![CDATA[construitArbre]]></Name>
					<X>450</X><Y>-290</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[msg]]></Name>
						<Type><![CDATA[MessageSuivi]]></Type>
					</Parameter>
					<Body><![CDATA[

this.idParent = -1;
if (this.phase==1){
	this.distances.add(0);
}
this.effaceArbre();	
//if (this.actif)
	//this.reseau.add(this.id);
RobotList enfantsPotentiels = this.potentiels();
this.diffusePotentiels(msg, enfantsPotentiels);	
//traceln("message passe a "+this.enfants.size()+" enfants");
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1679312855451</Id>
					<Name><![CDATA[receptionSuivi]]></Name>
					<X>150</X><Y>-220</Y>
					<Label><X>10</X><Y>-5</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[msg]]></Name>
						<Type><![CDATA[MessageSuivi]]></Type>
					</Parameter>
					<Body><![CDATA[/*if (this.id==99 || this.id==45){
traceln(this.id+"est en phase "+this.phase+" et reçoit une demande de "+msg.getIdExp()+" de phase "+msg.getPhase());
}
*/
if (this.phase==msg.getPhase()){
	traceln("2e demande de rattachement a un arbre");
	//ca où on reçoit une 2e demande concurrente à celle qui vient d'être traitée
	ListeValeurs msg2 = new ListeValeurs();
	Robot r = (Robot) findFirst(main.noeuds, n -> n.id == msg.getIdExp());
	traceln("envoi de liste vide de "+this.id+" vers "+msg.getIdExp());
	send(msg2, r);
}
else{
	//enregistre les infos descendantes
	this.phase = msg.getPhase();
	this.idParent = msg.getIdExp();
	//traceln("recu en "+this.id);


	if (msg instanceof SelectMessage){
      //traceln("selecteur recu en "+this.id+", phase "+this.phase);
      this.iteration++;
	  SelectMessage sm = (SelectMessage) msg;
	  this.valMax = sm.getValMax();
	  if (this.valMax > 0) {
    	  this.actif = (this.distances.getDMax() == this.valMax);	  
     }
	 /*if (this.actif){
	 	trace("valeurs pour "+this.id+": ");
	  	Iterator iter = this.distances.getList().iterator();
	  	int i;
	  	while (iter.hasNext()){
			i = (Integer) iter.next();
			trace(i+" ");
		}
	  	traceln(" DMax "+this.distances.getDMax());
	 }*/
	 
	}
	
	else if (msg instanceof WinnerMessage){
		WinnerMessage wm = (WinnerMessage) msg;
		this.actif = (this.id == wm.getWinnerId());
		this.winnerId = wm.getWinnerId();
		//traceln("winner choisi "+this.winnerId);
	}
	
	else{

		//On a un ElectMessage
		this.distRacine = msg.getDistance()+1;//distance parcourue depuis la racine
			//traceln(this.id+" est a la distance "+this.distRacine);
		if (this.phase == 1) {
			this.distances.add(this.distRacine);
		}
	}
}
	
	


]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1679312874559</Id>
					<Name><![CDATA[remonteeDonnees]]></Name>
					<X>520</X><Y>-210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[msg]]></Name>
						<Type><![CDATA[ListeValeurs]]></Type>
					</Parameter>
					<Body><![CDATA[//enregistre les données qui remontent
//msg est une ListeValeurs
RobotData rd;

Iterator msgIterator = msg.getList().iterator();
while (msgIterator.hasNext()) {
  	rd = (RobotData) msgIterator.next();
	rd.incremente();
	this.donneesEnfants.addElt(rd);
}


//enregistre l'arrivée du message
this.attente--;

if (this.attente==0){
	//on a reçu les réponses des enfants
	Robot r;
    
	//on ajoute les données du noeud à celles des enfants (en phase 2 de selection seulement si on est encore actif)
   	if (!this.externe && ( (this.actif && this.phase==2) || this.phase!=2 )) {
   		this.donneesEnfants.addElt(new RobotData(this.id, this.x, this.y, this.distances.getDMax(), this.distances.getDSum(), this.actif));
   	}

  	int tailleDonnees = this.donneesEnfants.getList().size();
  	//traceln("donnees de "+tailleDonnees+" noeuds recues");


    if (this.idParent!=-1){
	    //On n'est pas à la racine, on prépare la suite de la remontée
		this.envoieDonnees();
    }
	else{
		//le noeud racine a récupéré toutes les infos
        //On a les références d'un nouveau noeud externe
        traceln("reception de phase "+this.phase+" en "+this.id);
        
        if (this.phase <2){
            //fin de la recherche d'un exterieur
	        RobotData next;
	        if (this.distances.getSize()>0) {
		        next = this.donneesEnfants.getEltMaxDSum();
		    }
		    else{
		        next = this.donneesEnfants.getEltMaxDist();
		    }
	        //traceln("+ eloigne de "+this.id+": "+next.getId()+" a distance "+next.getDistance());
	        this.next = next.getId();
               
	        if (this.phase==0){
	        	//executé 1 fois pour démarrer depuis un extérieur
	            Relance msg3 = new Relance(next.getId());
	            send(msg3, this);
	        }
	        else if (this.phase==1){
	            //On a trouvé un extérieur  
				this.externe = true;
		       	this.fixeCouleur();
	        	//On détermine les noeuds les moins loins des externes
	        	//traceln(tailleDonnees+" en phase "+this.phase);
	        	if (this.distances.getSize()>1) {
	        		this.valMax = this.donneesEnfants.getMinMax();
	        	}
	        	else {
    	    	    traceln("il manque un 2e exterieur");
        		    this.valMax = -1;
        		}
        	
	    		//traceln("distance max acceptee: "+this.valMax);
	    		//On envoie un SelectMessage de phase 3
	            this.donneesEnfants = new ListeValeurs();
				int nextPhase = this.phase+1;
				//envoie SelectMessage(phase, parent, valeur)		
	        	SelectMessage msg3 = new SelectMessage(nextPhase, -1, this.valMax);
	            send(msg3, this);
	        }
        }
    	else if (this.phase==2){
	        traceln(tailleDonnees+" candidats selectionnes, noeud "+this.id+" pret pour l'iteration suivante");
			trace("candidats:");
			Iterator CandidatsIterator = this.donneesEnfants.getList().iterator();
			while (CandidatsIterator.hasNext()) {
  				rd = (RobotData) CandidatsIterator.next();
  				trace(" ("+rd.getId()+","+")");
  			}
			traceln();
	        //On démarre une nouvelle itération depuis le prochain exterieur si iteration est inférieur à...
	        traceln("iteration "+this.iteration);
	        if (this.iteration < main.k){
	            //relance d'une phase 1
                Relance msg3 = new Relance(this.next, 1);
                send(msg3, this);
    	    }
    	   else{//fin de l'algorithme
    	  
      	    	int winnerId = this.donneesEnfants.getMinId();
    	    	traceln(winnerId+" elu");
    	    	int nextPhase = this.phase+1;
    	    	WinnerMessage msg3 = new WinnerMessage(nextPhase, -1, winnerId);
	        	send(msg3, this);
	        }
        }
        
        else{//
        
        }

                      
	}

}
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1679312888534</Id>
					<Name><![CDATA[forwardSuivi]]></Name>
					<X>370</X><Y>-210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Transmet le message aux voisins a priori non encore contactés

if (this.phase==2){
	//sélection des noeuds gagnants
	//traceln("select en "+this.id);
	if (this.enfants.size()==0){
		//C'est une feuille, on va faire remonter une ListeValeurs (vide si noeud inactif)
		this.donneesEnfants = new ListeValeurs();
	    if (this.actif && !this.externe){
    		this.donneesEnfants.addElt(new RobotData(this.id, this.x, this.y, this.distances.getDMax(), this.distances.getDSum(), this.actif));
	    	//traceln(this.id + " a DMax "+this.distances.getDMax());
		}
	    ListeValeurs msg2 = this.donneesEnfants;
    	Robot r = (Robot) findFirst( main.noeuds, n -> n.id == this.idParent);
	    //traceln(this.id + " est une feuille, son parent est "+this.idParent);
    	send(msg2, r);
	}
	else{
		//on fait juste suivre et on attend
		this.donneesEnfants = new ListeValeurs();
		//this.reseau = new ArrayList<Integer>();
		SelectMessage msg3 = new SelectMessage(this.phase, this.id, this.valMax);
		//traceln("envoi relayé depuis "+this.id);
		this.diffuseEnfants(msg3);
		
	}


}

else if (this.phase==3){
			//traceln("transmet winner");
			WinnerMessage msg3 = new WinnerMessage(this.phase, this.id, this.winnerId);
			this.diffuseEnfants(msg3);
}

else{
	//suivi d'un ElectMessage
	//efface les données des arborescences précédentes
	this.effaceArbre();
	RobotList enfantsPotentiels = this.potentiels();
	//si c'est une feuille, on fait remonter le message
	if (enfantsPotentiels.size()==0){
	    //traceln(this.id+" fait remonter");
	    if (!this.externe)
	        //ajoute les données du noeud à la liste à transmettre
	        //traceln(this.id+" est a la distance "+this.evaluation);
    		this.donneesEnfants.addElt(new RobotData(this.id, this.x, this.y, this.distances.getDMax(), this.distances.getDSum(), this.actif));
	
	    this.envoieDonnees();
	}
	else{
		ElectMessage msg3 = new ElectMessage(this.phase, this.id, this.distRacine);
	    //traceln("envoi relayé depuis "+this.id);
		this.diffusePotentiels(msg3, enfantsPotentiels);
	
	    //traceln(this.attente+" messages envoyes depuis "+this.id);
	}
}
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1679312932677</Id>
					<Name><![CDATA[receptionRelance]]></Name>
					<X>210</X><Y>-170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[msg]]></Name>
						<Type><![CDATA[Relance]]></Type>
					</Parameter>
					<Body><![CDATA[
//traceln("relance "+msg.getId()+" arrivee en "+this.id);
if (this.id==msg.getId()){
	//traceln("relance arrivee en "+this.id);
    if (msg.getPhase()==-1)
		this.phase++;
	else
		this.phase = msg.getPhase();
		
	
	//démarrage d'un nouvel arbre
	this.demarrage(this.phase);
}
else{
	//suppose qu'on diffuse depuis la racine d'un arbre connu (vrai dès 2e recherche)
    //traceln(this.id + " fait suivre la relance");
    this.diffuseEnfants(msg);
    }]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1680273447380</Id>
					<Name><![CDATA[diffusePotentiels]]></Name>
					<X>580</X><Y>-80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[msg]]></Name>
						<Type><![CDATA[MessageSuivi]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[liste]]></Name>
						<Type><![CDATA[RobotList]]></Type>
					</Parameter>
					<Body><![CDATA[
for (Robot r:liste.getList()){
    this.enfants.add(r);
	send(msg, r);
	
	this.attente++;
}	

//traceln(this.attente+" messages envoyes depuis "+this.id);]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[RobotList]]></ReturnType>
					<Id>1680273466502</Id>
					<Name><![CDATA[potentiels]]></Name>
					<X>260</X><Y>-250</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[return new RobotList(filter(main.noeuds, n -> ( n.isConnectedTo(this) && n.phase!=this.phase)));
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1680273882643</Id>
					<Name><![CDATA[envoieDonnees]]></Name>
					<X>290</X><Y>-50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Envoie donneesEnfants au parent
ListeValeurs msg = this.donneesEnfants;
Robot r = (Robot) findFirst( main.noeuds, n -> n.id == this.idParent);
//traceln(this.id + " est une feuille, son parent est "+this.idParent);
send(msg, r);
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1683956251769</Id>
					<Name><![CDATA[receptionRechMin]]></Name>
					<X>250</X><Y>-210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[msg]]></Name>
						<Type><![CDATA[RechercheMin]]></Type>
					</Parameter>
					<Body><![CDATA[int idRecu = msg.getMinId();
if (idRecu < this.minId){
    //on met à jour le minimum et on transmet aux voisins
    this.minId = idRecu;
    RechercheMin msg2 = new RechercheMin(this.minId, this.id);
    List<Robot> voisins = filter(main.noeuds, n -> (n.isConnectedTo(this) && n.id != msg.getIdExp()));
    for (Robot r:voisins){
	    send(msg2, r);
    }
} 

]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1676971282639</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<StatechartReference>
						<PackageName><![CDATA[kBFS]]></PackageName>
						<ClassName><![CDATA[Robot]]></ClassName>
						<ItemName><![CDATA[statechart]]></ItemName>
					</StatechartReference>
					<DrawLine>true</DrawLine>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1676971473457</Id>
					<Name><![CDATA[main]]></Name>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[kBFS]]></PackageName>
						<ClassName><![CDATA[Main]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1676971282643</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
				<Group>
					<Id>1677059876835</Id>
					<Name><![CDATA[box]]></Name>
					<X>0</X><Y>-10</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<ScaleXCode><![CDATA[0.5]]></ScaleXCode>
					<ScaleYCode><![CDATA[0.5]]></ScaleYCode>

			<Presentation>
				<Polyline>
					<Id>1677059876837</Id>
					<Name><![CDATA[shapeBox]]></Name>
					<X>0</X><Y>20</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<OnClickCode><![CDATA[traceln(this.id);]]></OnClickCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<ScaleXCode><![CDATA[
]]></ScaleXCode>
					<ScaleYCode><![CDATA[
]]></ScaleYCode>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-1525489</FillColor>
					<FillColorCode><![CDATA[this.colour
]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>20</X><Y>-10</Y><Z>0</Z></Point>
					   <Point><X>20</X><Y>-30</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-40</Y><Z>0</Z></Point>
					   <Point><X>-20</X><Y>-30</Y><Z>0</Z></Point>
					   <Point><X>-20</X><Y>-10</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
				<Polyline>
					<Id>1677059876839</Id>
					<Name><![CDATA[_ps2]]></Name>
					<X>0</X><Y>20</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>402653184</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-20</Y><Z>0</Z></Point>
					   <Point><X>20</X><Y>-30</Y><Z>0</Z></Point>
					   <Point><X>20</X><Y>-10</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
				<Polyline>
					<Id>1677059876841</Id>
					<Name><![CDATA[_ps3]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>1358954495</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>20</X><Y>-10</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-20</Y><Z>0</Z></Point>
					   <Point><X>-20</X><Y>-10</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
				<Polyline>
					<Id>1677059876843</Id>
					<Name><![CDATA[_ps4]]></Name>
					<X>0</X><Y>20</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-11913984</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor/>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>20</X><Y>-10</Y><Z>0</Z></Point>
					   <Point><X>20</X><Y>-30</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-40</Y><Z>0</Z></Point>
					   <Point><X>-20</X><Y>-30</Y><Z>0</Z></Point>
					   <Point><X>-20</X><Y>-10</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
				<Line>
					<Id>1677059876845</Id>
					<Name><![CDATA[_ps5]]></Name>
					<X>-10</X><Y>-15</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-6324726</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>20</Dx>
					<Dy>10</Dy>
					<Dz>0</Dz>
				</Line>
				<Line>
					<Id>1677059876847</Id>
					<Name><![CDATA[_ps6]]></Name>
					<X>20</X><Y>-10</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-6324726</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>-20</Dx>
					<Dy>10</Dy>
					<Dz>0</Dz>
				</Line>
			</Presentation>

				</Group>
			</Presentation>

				</Level>
			</Presentation>

		</ActiveObjectClass>
	</ActiveObjectClasses>	
	<DifferentialEquationsMethod>EULER</DifferentialEquationsMethod>
	<MixedEquationsMethod>RK45_NEWTON</MixedEquationsMethod>
	<AlgebraicEquationsMethod>MODIFIED_NEWTON</AlgebraicEquationsMethod>
	<AbsoluteAccuracy>1.0E-5</AbsoluteAccuracy>
	<FixedTimeStep>0.001</FixedTimeStep>
	<RelativeAccuracy>1.0E-5</RelativeAccuracy>
	<TimeAccuracy>1.0E-5</TimeAccuracy>
	<Frame>
		<Width>1000</Width>
		<Height>600</Height>
	</Frame>
	<Database>
		<Logging>false</Logging>
		<AutoExport>false</AutoExport>
		<ShutdownCompact>false</ShutdownCompact>
		<ImportSettings>
			<ExternalConnection>
				<Id>1683955370605</Id>
				<Name><![CDATA[database]]></Name>
				<X>0</X><Y>0</Y>
				<Label><X>10</X><Y>0</Y></Label>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>true</PresentationFlag>
				<ShowLabel>true</ShowLabel>
				<DatabaseType>EXCEL_ACCESS</DatabaseType>
				<ConnectionURL><![CDATA[]]></ConnectionURL>
				<ConnectOnStartup>true</ConnectOnStartup>
				<DatabaseName><![CDATA[]]></DatabaseName>
				<ResourceReference>
					<PackageName><![CDATA[kBFS]]></PackageName>
					<ClassName><![CDATA[C:/Users/olivi/Nextcloud/22-23/PIR/jeuxDonnees/enr1n.xlsx]]></ClassName>
				</ResourceReference>
				<Host><![CDATA[localhost]]></Host>
				<JdbcDriverClassName><![CDATA[net.sourceforge.jtds.jdbc.Driver]]></JdbcDriverClassName>
				<Login><![CDATA[]]></Login>
				<Password><![CDATA[]]></Password>
			</ExternalConnection>
			<ExternalConnection>
				<Id>1683955384328</Id>
				<Name><![CDATA[database]]></Name>
				<X>0</X><Y>0</Y>
				<Label><X>10</X><Y>0</Y></Label>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>true</PresentationFlag>
				<ShowLabel>true</ShowLabel>
				<DatabaseType>EXCEL_ACCESS</DatabaseType>
				<ConnectionURL><![CDATA[]]></ConnectionURL>
				<ConnectOnStartup>true</ConnectOnStartup>
				<DatabaseName><![CDATA[]]></DatabaseName>
				<ResourceReference>
					<PackageName><![CDATA[kBFS]]></PackageName>
					<ClassName><![CDATA[C:/Users/olivi/Nextcloud/22-23/PIR/jeuxDonnees/a1d.xlsx]]></ClassName>
				</ResourceReference>
				<Host><![CDATA[localhost]]></Host>
				<JdbcDriverClassName><![CDATA[net.sourceforge.jtds.jdbc.Driver]]></JdbcDriverClassName>
				<Login><![CDATA[]]></Login>
				<Password><![CDATA[]]></Password>
			</ExternalConnection>
			<TableImportSettings>
				<TableReference>
					<PackageName><![CDATA[kBFS]]></PackageName>
					<ClassName><![CDATA[enr1n]]></ClassName>
				</TableReference>
				<ConnectionIndex>0</ConnectionIndex>
				<ExternalTableName><![CDATA["enr1n"]]></ExternalTableName>
				<AutoImport>false</AutoImport>
			</TableImportSettings>
			<TableImportSettings>
				<TableReference>
					<PackageName><![CDATA[kBFS]]></PackageName>
					<ClassName><![CDATA[a1d]]></ClassName>
				</TableReference>
				<ConnectionIndex>1</ConnectionIndex>
				<ExternalTableName><![CDATA["a1d"]]></ExternalTableName>
				<AutoImport>false</AutoImport>
			</TableImportSettings>
		</ImportSettings>
		<ExportSettings>
		</ExportSettings>
	</Database>
	
	<RunConfiguration ActiveObjectClassId="1676971205453">
		<Id>1676971205457</Id>
		<Name><![CDATA[RunConfiguration]]></Name>
		<MaximumMemory>512</MaximumMemory>
		<ModelTimeProperties>
			<StopOption><![CDATA[Stop at specified time]]></StopOption>
			<InitialDate><![CDATA[1676937600000]]></InitialDate>	
			<InitialTime><![CDATA[0.0]]></InitialTime>	
			<FinalDate><![CDATA[1679356800000]]></FinalDate>	
			<FinalTime><![CDATA[100.0]]></FinalTime>	
		</ModelTimeProperties>
		<AnimationProperties>
			<StopNever>true</StopNever>
			<ExecutionMode>realTimeScaled</ExecutionMode>
			<RealTimeScale>1.0</RealTimeScale>
			<EnableZoomAndPanning>true</EnableZoomAndPanning>
			<EnableDeveloperPanel>false</EnableDeveloperPanel>
			<ShowDeveloperPanelOnStart>false</ShowDeveloperPanelOnStart>
		</AnimationProperties>
		<Inputs>		
		</Inputs>
		<Outputs>
		</Outputs>
	</RunConfiguration>
	<Experiments>	
		<!--   =========   Simulation Experiment   ========  -->
		<SimulationExperiment ActiveObjectClassId="1676971205453">
			<Id>1677098892587</Id>
			<Name><![CDATA[centres_au_bout]]></Name>
			<CommandLineArguments><![CDATA[]]></CommandLineArguments>
			<MaximumMemory>512</MaximumMemory>
			<RandomNumberGenerationType>fixedSeed</RandomNumberGenerationType>
			<CustomGeneratorCode>new Random()</CustomGeneratorCode>
			<SeedValue>1</SeedValue>
			<SelectionModeForSimultaneousEvents>LIFO</SelectionModeForSimultaneousEvents>
			<VmArgs><![CDATA[]]></VmArgs>
			<LoadRootFromSnapshot>false</LoadRootFromSnapshot>

			<Presentation>
				<Text>
					<Id>1677098892588</Id>
					<Name><![CDATA[text]]></Name>
					<X>50</X><Y>30</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-12490271</Color>
					<Text><![CDATA[ABCpur]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>24</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

			<Parameters>			
				<Parameter>
					<ParameterName><![CDATA[popSize]]></ParameterName>
					<ParameterValue Class="CodeValue">
						<Code><![CDATA[36
]]></Code>
					</ParameterValue>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[k]]></ParameterName>
					<ParameterValue Class="CodeValue">
						<Code><![CDATA[10]]></Code>
					</ParameterValue>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[connectRange]]></ParameterName>
					<ParameterValue Class="CodeValue">
						<Code><![CDATA[85]]></Code>
					</ParameterValue>
				</Parameter>
			</Parameters>			
			<PresentationProperties>
				<EnableZoomAndPanning>true</EnableZoomAndPanning>
				<ExecutionMode><![CDATA[realTimeScaled]]></ExecutionMode>
				<Title><![CDATA[ABCpur : Simulation2]]></Title>	
				<EnableDeveloperPanel>true</EnableDeveloperPanel>
				<ShowDeveloperPanelOnStart>false</ShowDeveloperPanelOnStart>
				<RealTimeScale>1.0</RealTimeScale>
			</PresentationProperties>
			<ModelTimeProperties>
				<StopOption><![CDATA[Never]]></StopOption>
				<InitialDate><![CDATA[1676937600000]]></InitialDate>	
				<InitialTime><![CDATA[0.0]]></InitialTime>	
				<FinalDate><![CDATA[1679356800000]]></FinalDate>	
				<FinalTime><![CDATA[100.0]]></FinalTime>	
			</ModelTimeProperties>
			<BypassInitialScreen>true</BypassInitialScreen>
		</SimulationExperiment>
		<!--   =========   Simulation Experiment   ========  -->
		<SimulationExperiment ActiveObjectClassId="1676971205453">
			<Id>1679596452945</Id>
			<Name><![CDATA[Simulation_a1d]]></Name>
			<CommandLineArguments><![CDATA[]]></CommandLineArguments>
			<MaximumMemory>512</MaximumMemory>
			<RandomNumberGenerationType>fixedSeed</RandomNumberGenerationType>
			<CustomGeneratorCode>new Random()</CustomGeneratorCode>
			<SeedValue>1</SeedValue>
			<SelectionModeForSimultaneousEvents>LIFO</SelectionModeForSimultaneousEvents>
			<VmArgs><![CDATA[]]></VmArgs>
			<LoadRootFromSnapshot>false</LoadRootFromSnapshot>

			<Presentation>
				<Text>
					<Id>1679596452946</Id>
					<Name><![CDATA[text]]></Name>
					<X>50</X><Y>30</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-12490271</Color>
					<Text><![CDATA[kBFS2Enregistres]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>24</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

			<Parameters>			
				<Parameter>
					<ParameterName><![CDATA[popSize]]></ParameterName>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[k]]></ParameterName>
					<ParameterValue Class="CodeValue">
						<Code><![CDATA[10]]></Code>
					</ParameterValue>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[connectRange]]></ParameterName>
					<ParameterValue Class="CodeValue">
						<Code><![CDATA[85]]></Code>
					</ParameterValue>
				</Parameter>
			</Parameters>			
			<PresentationProperties>
				<EnableZoomAndPanning>true</EnableZoomAndPanning>
				<ExecutionMode><![CDATA[realTimeScaled]]></ExecutionMode>
				<Title><![CDATA[kBFS2Enregistres : Simulation_a1d]]></Title>	
				<EnableDeveloperPanel>true</EnableDeveloperPanel>
				<ShowDeveloperPanelOnStart>false</ShowDeveloperPanelOnStart>
				<RealTimeScale>1.0</RealTimeScale>
			</PresentationProperties>
			<ModelTimeProperties>
				<StopOption><![CDATA[Never]]></StopOption>
				<InitialDate><![CDATA[1676937600000]]></InitialDate>	
				<InitialTime><![CDATA[0.0]]></InitialTime>	
				<FinalDate><![CDATA[1679356800000]]></FinalDate>	
				<FinalTime><![CDATA[100.0]]></FinalTime>	
			</ModelTimeProperties>
			<BypassInitialScreen>true</BypassInitialScreen>
		</SimulationExperiment>
		<!--   =========   Simulation Experiment   ========  -->
		<SimulationExperiment ActiveObjectClassId="1676971205453">
			<Id>1684166379860</Id>
			<Name><![CDATA[essai342_kBFS6]]></Name>
			<CommandLineArguments><![CDATA[]]></CommandLineArguments>
			<MaximumMemory>512</MaximumMemory>
			<RandomNumberGenerationType>fixedSeed</RandomNumberGenerationType>
			<CustomGeneratorCode>new Random()</CustomGeneratorCode>
			<SeedValue>1</SeedValue>
			<SelectionModeForSimultaneousEvents>LIFO</SelectionModeForSimultaneousEvents>
			<VmArgs><![CDATA[]]></VmArgs>
			<LoadRootFromSnapshot>false</LoadRootFromSnapshot>

			<Presentation>
				<Text>
					<Id>1684166379862</Id>
					<Name><![CDATA[text]]></Name>
					<X>50</X><Y>30</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-12490271</Color>
					<Text><![CDATA[kBFS2Enregistres]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>24</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

			<Parameters>			
				<Parameter>
					<ParameterName><![CDATA[popSize]]></ParameterName>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[k]]></ParameterName>
					<ParameterValue Class="CodeValue">
						<Code><![CDATA[10]]></Code>
					</ParameterValue>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[connectRange]]></ParameterName>
					<ParameterValue Class="CodeValue">
						<Code><![CDATA[85]]></Code>
					</ParameterValue>
				</Parameter>
			</Parameters>			
			<PresentationProperties>
				<EnableZoomAndPanning>true</EnableZoomAndPanning>
				<ExecutionMode><![CDATA[realTimeScaled]]></ExecutionMode>
				<Title><![CDATA[kBFS2Enregistres : essai342_kBFS6]]></Title>	
				<EnableDeveloperPanel>true</EnableDeveloperPanel>
				<ShowDeveloperPanelOnStart>false</ShowDeveloperPanelOnStart>
				<RealTimeScale>1.0</RealTimeScale>
			</PresentationProperties>
			<ModelTimeProperties>
				<StopOption><![CDATA[Never]]></StopOption>
				<InitialDate><![CDATA[1676937600000]]></InitialDate>	
				<InitialTime><![CDATA[0.0]]></InitialTime>	
				<FinalDate><![CDATA[1679356800000]]></FinalDate>	
				<FinalTime><![CDATA[100.0]]></FinalTime>	
			</ModelTimeProperties>
			<BypassInitialScreen>true</BypassInitialScreen>
		</SimulationExperiment>
		<!--   =========   Simulation Experiment   ========  -->
		<SimulationExperiment ActiveObjectClassId="1676971205453">
			<Id>1684166428173</Id>
			<Name><![CDATA[essai467_kBFS10]]></Name>
			<CommandLineArguments><![CDATA[]]></CommandLineArguments>
			<MaximumMemory>512</MaximumMemory>
			<RandomNumberGenerationType>fixedSeed</RandomNumberGenerationType>
			<CustomGeneratorCode>new Random()</CustomGeneratorCode>
			<SeedValue>1</SeedValue>
			<SelectionModeForSimultaneousEvents>LIFO</SelectionModeForSimultaneousEvents>
			<VmArgs><![CDATA[]]></VmArgs>
			<LoadRootFromSnapshot>false</LoadRootFromSnapshot>

			<Presentation>
				<Text>
					<Id>1684166428175</Id>
					<Name><![CDATA[text]]></Name>
					<X>50</X><Y>30</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-12490271</Color>
					<Text><![CDATA[kBFS2Enregistres]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>24</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

			<Parameters>			
				<Parameter>
					<ParameterName><![CDATA[popSize]]></ParameterName>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[k]]></ParameterName>
					<ParameterValue Class="CodeValue">
						<Code><![CDATA[10]]></Code>
					</ParameterValue>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[connectRange]]></ParameterName>
					<ParameterValue Class="CodeValue">
						<Code><![CDATA[85]]></Code>
					</ParameterValue>
				</Parameter>
			</Parameters>			
			<PresentationProperties>
				<EnableZoomAndPanning>true</EnableZoomAndPanning>
				<ExecutionMode><![CDATA[realTimeScaled]]></ExecutionMode>
				<Title><![CDATA[kBFS2Enregistres : essai467_kBFS10]]></Title>	
				<EnableDeveloperPanel>true</EnableDeveloperPanel>
				<ShowDeveloperPanelOnStart>false</ShowDeveloperPanelOnStart>
				<RealTimeScale>1.0</RealTimeScale>
			</PresentationProperties>
			<ModelTimeProperties>
				<StopOption><![CDATA[Never]]></StopOption>
				<InitialDate><![CDATA[1676937600000]]></InitialDate>	
				<InitialTime><![CDATA[0.0]]></InitialTime>	
				<FinalDate><![CDATA[1679356800000]]></FinalDate>	
				<FinalTime><![CDATA[100.0]]></FinalTime>	
			</ModelTimeProperties>
			<BypassInitialScreen>true</BypassInitialScreen>
		</SimulationExperiment>
		<!--   =========   Simulation Experiment   ========  -->
		<SimulationExperiment ActiveObjectClassId="1676971205453">
			<Id>1687315260237</Id>
			<Name><![CDATA[Pseudo_anneau]]></Name>
			<CommandLineArguments><![CDATA[]]></CommandLineArguments>
			<MaximumMemory>512</MaximumMemory>
			<RandomNumberGenerationType>fixedSeed</RandomNumberGenerationType>
			<CustomGeneratorCode>new Random()</CustomGeneratorCode>
			<SeedValue>1</SeedValue>
			<SelectionModeForSimultaneousEvents>LIFO</SelectionModeForSimultaneousEvents>
			<VmArgs><![CDATA[]]></VmArgs>
			<LoadRootFromSnapshot>false</LoadRootFromSnapshot>

			<Presentation>
				<Text>
					<Id>1687315260239</Id>
					<Name><![CDATA[text]]></Name>
					<X>50</X><Y>30</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-12490271</Color>
					<Text><![CDATA[kBFS4Enregistres]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>24</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

			<Parameters>			
				<Parameter>
					<ParameterName><![CDATA[popSize]]></ParameterName>
					<ParameterValue Class="CodeValue">
						<Code><![CDATA[42]]></Code>
					</ParameterValue>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[k]]></ParameterName>
					<ParameterValue Class="CodeValue">
						<Code><![CDATA[10]]></Code>
					</ParameterValue>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[connectRange]]></ParameterName>
					<ParameterValue Class="CodeValue">
						<Code><![CDATA[85]]></Code>
					</ParameterValue>
				</Parameter>
			</Parameters>			
			<PresentationProperties>
				<EnableZoomAndPanning>true</EnableZoomAndPanning>
				<ExecutionMode><![CDATA[realTimeScaled]]></ExecutionMode>
				<Title><![CDATA[kBFS4Enregistres : Pseudo_anneau]]></Title>	
				<EnableDeveloperPanel>true</EnableDeveloperPanel>
				<ShowDeveloperPanelOnStart>false</ShowDeveloperPanelOnStart>
				<RealTimeScale>1.0</RealTimeScale>
			</PresentationProperties>
			<ModelTimeProperties>
				<StopOption><![CDATA[Never]]></StopOption>
				<InitialDate><![CDATA[1676937600000]]></InitialDate>	
				<InitialTime><![CDATA[0.0]]></InitialTime>	
				<FinalDate><![CDATA[1679356800000]]></FinalDate>	
				<FinalTime><![CDATA[100.0]]></FinalTime>	
			</ModelTimeProperties>
			<BypassInitialScreen>true</BypassInitialScreen>
		</SimulationExperiment>	
	</Experiments>
	<JavaClasses>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1677054123713</Id>
			<Name><![CDATA[VecDistances]]></Name>
			<Text><![CDATA[/**
 * vec3
 */	
public class VecDistances implements Serializable {

	 List<Integer> donnees;
    /**
     * Default constructor
     */
    public VecDistances() {
    	this.donnees = new ArrayList<Integer>();
    }

    public void add(int d) {
    	this.donnees.add(d);
    }
    
    public int getDMax() {
    	int M = 0;
    	for (int d:this.donnees) {
    		if (d>M)
    			M = d;
    	}
    	return M;
    }
    
    public int getDSum() {
    	int S = 0;
    	for (int d:this.donnees) {
    		S += d;
    	}
    	return S;
    }
    
    public int getSize() {
    	return this.donnees.size();
    }
    
    public List getList() {
    	return this.donnees;
    }
  
    

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1679312648514</Id>
			<Name><![CDATA[MessageSuivi]]></Name>
			<Text><![CDATA[/**
 * ProcMessage
 */	
public class MessageSuivi extends Message implements Serializable {

	int phase;   
	int idExp; 
	int distanceParcourue;

    /**
     * Default constructor
     */
    public MessageSuivi() {
    }
   
    public MessageSuivi(int phase, int id)  {
    	this.phase = phase;
    	this.idExp = id;
		this.distanceParcourue = 0;
    }

    public MessageSuivi(int phase, int id, int distance)  {
    	this.phase = phase;
    	this.idExp = id;
		this.distanceParcourue = distance;
    }

    public int getPhase() {
    	return this.phase;
    }

    public int getIdExp() {
    	return this.idExp;
    }
    
    public int getDistance() {
    	return this.distanceParcourue;
    }
    
    @Override
	public String toString() {
		return "phase = "+this.phase +" "
				+"expediteur: "+this.idExp;
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1679312664820</Id>
			<Name><![CDATA[SelectMessage]]></Name>
			<Text><![CDATA[/**
 * launchMessage
 */	
public class SelectMessage extends MessageSuivi implements Serializable {

	 int valMaxAcceptable; //0 si le diamètre est pair, 1 sinon

    /**
     * Default constructor
     */
    public SelectMessage() {
    	super();
    }

    /**
     * Constructor initializing the fields
     */
    public SelectMessage(int phase, int id, int v) {
    	super(phase, id);
		this.valMaxAcceptable = v;
    }
       
    public int getValMax() {
    	return this.valMaxAcceptable;
    }


	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1679312697048</Id>
			<Name><![CDATA[ElectMessage]]></Name>
			<Text><![CDATA[/**
 * elect
 */	
public class ElectMessage extends MessageSuivi implements Serializable {



    /**
     * Default constructor
     */
    public ElectMessage() {
    	super();
    	 
    }

    /**
     * Constructor initializing the fields
     */
    public ElectMessage(int phase, int id) {
    	super(phase, id);
    }

    public ElectMessage(int phase, int idExp, int distance) {
    	super(phase, idExp, distance);
    }
    
    @Override
	public String toString() {
		return super.toString();
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1679312723323</Id>
			<Name><![CDATA[Relance]]></Name>
			<Text><![CDATA[/**
 * Relance
 */	
public class Relance extends Message implements Serializable {

    int idCible;
    int phase;
	/**
     * Default constructor
     */
    public Relance() {
    	super();
    }
    
    public Relance(int id) {
    	super();
    	this.idCible = id;
    	this.phase = -1;
    }
       
    public Relance(int id, int phase) {
    	super();
    	this.idCible = id;
    	this.phase = phase;
    }
    
    public int getPhase() {
    	return this.phase;
    }
    
    public int getId() {
    	return this.idCible;
    }


	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1679312741517</Id>
			<Name><![CDATA[RobotData]]></Name>
			<Text><![CDATA[public class RobotData  implements Serializable {

	 int id; 		//émetteur de l'accusé
	 double x;
	 double y;
	 int distance;
	 boolean actif;
	 //max des distances aux noeuds exterieurs enregistres
	 int dMax;
	 //somme des distances aux noeuds exterieurs enregistres
	 int dSum;
   /**
    * Default constructor
    */
   public RobotData() {
   }

   /**
    * Constructor initializing the fields
    */
  
   public RobotData(int id, double x, double y, int dMax, int dSum, boolean actif) {
		this.id = id;
		this.x = x;
		this.y = y;
		this.distance = 0;
		this.actif = actif;
		this.dMax = dMax;
		this.dSum = dSum;
   }

   public int getId() {return this.id; }
   
   public double getX() {return this.x;}
   
   public double getY() {return this.y;}
         
   public int getDMax() {return this.dMax;}

   public int getDSum() {return this.dSum;}

   public boolean getActif() {return this.actif;}
   
   public int getDistance() {return this.distance;}
   
   public void incremente() {this.distance++;}

   @Override
	public String toString() {
		return  
			"id = " + id +" " +
			"x = " + x +" " +
			"y = " + y +" "+
			"distance = "+this.distance;
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}


]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1679312774585</Id>
			<Name><![CDATA[ListeValeurs]]></Name>
			<Text><![CDATA[/**
 * ListeValeurs
 */	
public class ListeValeurs implements Serializable {

	/**
	 * ListeValeurs
	 */	
	 List<RobotData> donnees;
		 
    /**
     * Default constructor
     */
    public ListeValeurs() {
    	donnees = new ArrayList<RobotData>();
    }

    /**
 	/* constructor
    */
	public ListeValeurs(ListeValeurs uneListe) {
	   	donnees = uneListe.getList();
	}

    public List getList() {
			return this.donnees;
		}
    
    public RobotData getElt(int i) {
    	//renvoie le robotData d'index i
    	return this.donnees.get(i);
    }
    
    public void addElt(RobotData rd) {
    	this.donnees.add(rd);
    }
    
    public int getMinMax() {
    	//renvoie le minimum sur la liste de donnees
    	//du champ 'dMax' donnant la distance aux noeuds exterieurs
    	//permet de trouver l'excentricite partielle minimale
    	if (this.donnees.size() == 0)
    		return -1;
    	int min = this.donnees.get(0).getDMax();
    	for (RobotData rd:this.donnees) {
    		if (rd.getDMax()<min) {
    			min = rd.getDMax();
    		}
    	}
    	return min;
    }
    
    public int getMaxDist() {
    	//renvoie la distance maximale (à la racine) enregistrée dans les données
    	if (this.donnees.size() == 0)
    		return -1;
    	int max = 0;
    	for (RobotData rd:this.donnees) {
    		if (rd.getDistance()>max) {
    			max = rd.getDistance();
    		}
    	}
    	return max;
    }
   

    public RobotData getEltMaxDist() {
    	//renvoie la donnée pour laquelle la distance est minimale.
    	//en cas d'égalité renvoie celle d'id minimal
    	if (this.donnees.size() == 0)
    		return new RobotData();
    	int max = 0;
        int idMax = -1;
    	RobotData dataMax = this.getElt(0);
    	for (RobotData rd:this.donnees) {
    		if (rd.getDistance()>max || (rd.getDistance()==max && rd.getId()<idMax)) {
    			max = rd.getDistance();
    			dataMax = rd;
    			idMax = rd.getId();
    		}
    	}
    	return dataMax;
    }    
    
    public int getMinId() {
    	//renvoie l'identifiant minimum de la liste
    	if (this.donnees.size() == 0)
    		return -1;
    	int idMin = this.getElt(0).getId();
    	for (RobotData rd:this.donnees) {
    		if (rd.getId()<idMin) {
    			idMin = rd.getId();
    		}
    	}
    	return idMin;
    }  
    
    public RobotData getEltMaxDSum() {
    	//renvoie la donnée pour laquelle la somme des distances est minimale.
    	//en cas d'égalité renvoie celle d'id minimal
    	if (this.donnees.size() == 0)
    		return new RobotData();
    	int max = 0;
        int idMax = -1;
    	RobotData dataMax = this.getElt(0);
    	for (RobotData rd:this.donnees) {
    		if (rd.getDSum()>max || (rd.getDSum()==max && rd.getId()<idMax)) {
    			max = rd.getDSum();
    			dataMax = rd;
    			idMax = rd.getId();
    		}
    	}
    	return dataMax;
    }       
    
    
    @Override
		public String toString() {
			String res = "";
			int n=this.donnees.size();
			for (int i=0;i<n; i++)
			{
				RobotData rd = (RobotData) this.donnees.get(i);
				res = res + "("+rd.getId()+","+rd.getDistance()+")";
			}
			return  res;
		}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}


]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1679314116469</Id>
			<Name><![CDATA[Iteration]]></Name>
			<Text><![CDATA[/**
 * IterationABC
 */	
public class Iteration extends Relance implements Serializable {

    /**
     * Default constructor
     */
    public Iteration() {
    }

    public Iteration(int id) {
    	super(id);
    }
    
	@Override
	public String toString() {
		return super.toString();
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1679592027879</Id>
			<Name><![CDATA[WinnerMessage]]></Name>
			<Text><![CDATA[/**
 * WinnerMessage
 */	
public class WinnerMessage extends MessageSuivi implements Serializable {

	int winnerId;
	
	/**
     * Default constructor
     */
    public WinnerMessage() {
    	super();
    }

    /**
     * Constructor initializing the fields
     */
    public WinnerMessage(int phase, int id, int i) {
    	super(phase, id);
		this.winnerId = i;
    }
       
    public int getWinnerId() {return this.winnerId;}
    
    @Override
	public String toString() {
		return super.toString();
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}









]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1680273433107</Id>
			<Name><![CDATA[RobotList]]></Name>
			<Text><![CDATA[/**
 * RobotList
 */	
public class RobotList implements Serializable {

    List<Robot> donnees;
    
    /**
     * Default constructor
     */
    public RobotList() {
    	donnees = new ArrayList<Robot>();
    }

    public RobotList(List<Robot> liste) {
    	this.donnees = liste;
    }
    
    public List<Robot> getList(){ return this.donnees;}

    public int size() {
    	return this.donnees.size();
    }
    @Override
	public String toString() {
		return super.toString();
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1680273681182</Id>
			<Name><![CDATA[Message]]></Name>
			<Text><![CDATA[/**
 * Message
 */	
public class Message implements Serializable {

    /**
     * Default constructor
     */
    public Message() {
    }

	@Override
	public String toString() {
		return super.toString();
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1683956218784</Id>
			<Name><![CDATA[RechercheMin]]></Name>
			<Text><![CDATA[/**
 * RechercheMin
 */	
public class RechercheMin extends Message implements Serializable {

    int minId;
    int idExp;
    
	/**
     * Default constructor
     */
    public RechercheMin() {
    	super();
    }

    public RechercheMin(int id, int exp) {
    	super();
    	this.minId = id;
    	this.idExp = exp;
    }

    public int getMinId() {
    	return this.minId;
    }
    
    public int getIdExp() {
    	return this.idExp;
    }
    
    @Override
	public String toString() {
		return super.toString();
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
	</JavaClasses>
	<ModelResources>
		<Resource>
			<Path><![CDATA[C:/Users/olivi/Nextcloud/22-23/PIR/jeuxDonnees/enr1n.xlsx]]></Path>
			<ReferencedFromUserCode>false</ReferencedFromUserCode>
		</Resource>
		<Resource>
			<Path><![CDATA[C:/Users/olivi/Nextcloud/22-23/PIR/jeuxDonnees/a1d.xlsx]]></Path>
			<ReferencedFromUserCode>false</ReferencedFromUserCode>
		</Resource>
	</ModelResources>
    <RequiredLibraryReference>
		<LibraryName><![CDATA[com.anylogic.libraries.modules.markup_descriptors]]></LibraryName>
		<VersionMajor>1</VersionMajor>
		<VersionMinor>0</VersionMinor>
		<VersionBuild>0</VersionBuild>
    </RequiredLibraryReference>
</Model>
</AnyLogicWorkspace>